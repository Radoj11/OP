package agh.cs.lab2;public class Position {    public final int x;    public final int y;    public Position(int x, int y){        this.x=x;        this.y=y;    }    @Override    public String toString(){        return "(" + this.x + "," + this.y + ")";    }    public boolean smaller(Position obj){        return obj.x >= this.x && obj.y >= this.y;    }    public boolean larger(Position obj){        return obj.x <= this.x && obj.y <= this.y;    }    public Position upperRight(Position obj){        return new Position(max(obj.x,this.x),max(obj.y,this.y));    }    public Position lowerLeft(Position obj){        return new Position(min(obj.x,this.x),min(obj.y,this.y));    }    public Position add(Position obj){        return new Position(obj.x+this.x,obj.y+this.y);    }    public Position scalarMultiply(int scalar){        return new Position(this.x*scalar,this.y*scalar);    }    @Override    public int hashCode() {        return super.hashCode();    }    @Override    public boolean equals(Object other){        if(this == other)            return true;        if(!(other instanceof Position))            return false;        Position that = (Position) other;        if(that.x == this.x && that.y == this.y)            return true;        else            return false;    }    private static int max(int a, int b){        return a > b ? a : b;    }    private static int min(int a, int b){        return a < b ? a : b;    }}